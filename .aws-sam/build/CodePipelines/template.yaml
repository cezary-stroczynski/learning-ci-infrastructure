AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  CloudFormationRole:
    Type: String
  ArtifactsBucketName:
    Type: String
    Description: Name of S3 bucket where .zip file with artifact is stored
  CurrentTag:
    Type: String
    Default: current
  Environment:
    Type: String
    Default: staging
  FrontendDistributionId:
    Type: String
  FrontendBucketName:
    Type: String
  BuildType:
    Type: String
    Default: LINUX_CONTAINER
    Description: The build container type to use for building the app
  BuildComputeType:
    Type: String
    Default: BUILD_GENERAL1_SMALL
    Description: The build compute type to use for building the app
  BuildImage:
    Type: String
    Default: aws/codebuild/standard:5.0
    Description: The build image to use for building the app
Resources:
  CodeBuildEnsureTransform:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-DeploySite
      Description: Ensure that the template uses ttfm transform
      ServiceRole:
        Ref: CloudFormationRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type:
          Ref: BuildType
        ComputeType:
          Ref: BuildComputeType
        Image:
          Fn::Sub: ${BuildImage}
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          Fn::Sub: "version: 0.2\nphases:\n  install:\n    runtime-versions:\n   \
            \   python: 3.8\n      nodejs: 12.x\n    commands:\n      - pip install\
            \ aws-sam-cli\n      - npm install -g jq.node\n  build:\n    commands:\n\
            \      - make deploy-${Environment}-ci\n"
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: codepipeline-service
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            - codebuild:*
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::codepipeline*
            Effect: Allow
          - Action:
            - s3:*
            - iam:PassRole
            - cloudformation:*
            Resource: '*'
            Effect: Allow
          - Action:
            - lambda:InvokeFunction
            Effect: Allow
            Resource:
            - Fn::GetAtt:
              - InvalidateCloudFront
              - Arn
  PipelineBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
  InfrastructurePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
        - CodePipelineRole
        - Arn
      Name: update-infrastructure
      Stages:
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: '1'
            Provider: S3
          OutputArtifacts:
          - Name: SourceArtifacts
          Configuration:
            S3Bucket:
              Ref: ArtifactsBucketName
            S3ObjectKey:
              Fn::Sub: ${Environment}/infrastructure/${CurrentTag}/main.zip
            PollForSourceChanges: false
          RunOrder: 1
      - Name: EnforceSecurityTransform
        Actions:
        - Name: EnforeSecurityTransform
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          InputArtifacts:
          - Name: SourceArtifacts
          OutputArtifacts:
          - Name: BuildArtifacts
          Configuration:
            ProjectName:
              Ref: CodeBuildEnsureTransform
          RunOrder: 1
      ArtifactStore:
        Type: S3
        Location:
          Ref: PipelineBucket
  AmazonCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cwe-pipeline-execution
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: codepipeline:StartPipelineExecution
            Resource:
            - Fn::Sub: arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${InfrastructurePipeline}
            - Fn::Sub: arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${FrontendPipeline}
  AmazonCloudWatchEventRuleInfrstructure:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
        - aws.s3
        detail-type:
        - AWS API Call via CloudTrail
        detail:
          eventSource:
          - s3.amazonaws.com
          eventName:
          - CopyObject
          - PutObject
          - CompleteMultipartUpload
          requestParameters:
            bucketName:
            - Ref: ArtifactsBucketName
            key:
            - Fn::Sub: ${Environment}/infrastructure/${CurrentTag}/main.zip
      Targets:
      - Arn:
          Fn::Sub: arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${InfrastructurePipeline}
        RoleArn:
          Fn::GetAtt:
          - AmazonCloudWatchEventRole
          - Arn
        Id: codepipeline-AppPipeline
  AWSCloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: AWSCloudTrailBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: AWSCloudTrailAclCheck
          Effect: Allow
          Principal:
            Service:
            - cloudtrail.amazonaws.com
          Action: s3:GetBucketAcl
          Resource:
            Fn::GetAtt:
            - AWSCloudTrailBucket
            - Arn
        - Sid: AWSCloudTrailWrite
          Effect: Allow
          Principal:
            Service:
            - cloudtrail.amazonaws.com
          Action: s3:PutObject
          Resource:
            Fn::Join:
            - ''
            - - Fn::GetAtt:
                - AWSCloudTrailBucket
                - Arn
              - /AWSLogs/
              - Ref: AWS::AccountId
              - /*
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control
  AWSCloudTrailBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
  AwsCloudTrail:
    DependsOn:
    - AWSCloudTrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName:
        Ref: AWSCloudTrailBucket
      EventSelectors:
      - DataResources:
        - Type: AWS::S3::Object
          Values:
          - Fn::Sub: arn:aws:s3:::${ArtifactsBucketName}/${Environment}/infrastructure/${CurrentTag}/main.zip
          - Fn::Sub: arn:aws:s3:::${ArtifactsBucketName}/${Environment}/webapp/${CurrentTag}/webapp.zip
          - Fn::Sub: arn:aws:s3:::${ArtifactsBucketName}/${Environment}/admin-panel/${CurrentTag}/admin-panel.zip
        ReadWriteType: WriteOnly
      IncludeGlobalServiceEvents: false
      IsLogging: true
      IsMultiRegionTrail: false
  FrontendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
        - CodePipelineRole
        - Arn
      Name: webapp-react
      Stages:
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: '1'
            Provider: S3
          OutputArtifacts:
          - Name: SourceArtifacts
          Configuration:
            S3Bucket:
              Ref: ArtifactsBucketName
            S3ObjectKey:
              Fn::Sub: ${Environment}/webapp/${CurrentTag}/webapp.zip
            PollForSourceChanges: false
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: UpdateS3
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: '1'
            Provider: S3
          InputArtifacts:
          - Name: SourceArtifacts
          Configuration:
            BucketName:
              Ref: FrontendBucketName
            Extract: true
          RunOrder: 1
        - Name: InvalidateCloudFront
          ActionTypeId:
            Category: Invoke
            Owner: AWS
            Version: '1'
            Provider: Lambda
          InputArtifacts: []
          OutputArtifacts: []
          Configuration:
            FunctionName:
              Ref: InvalidateCloudFront
            UserParameters:
              Ref: FrontendDistributionId
          RunOrder: 2
      ArtifactStore:
        Type: S3
        Location:
          Ref: PipelineBucket
  InvalidateCloudFront:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../../invalidateCloudFront.zip
      Handler: index.default
      Runtime: nodejs14.x
      Policies:
      - Statement:
        - Action:
          - cloudfront:CreateInvalidation
          - codepipeline:PutJobSuccessResult
          - codepipeline:PutJobFailureResult
          Effect: Allow
          Resource: '*'
  AmazonCloudWatchEventRuleFrontend:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
        - aws.s3
        detail-type:
        - AWS API Call via CloudTrail
        detail:
          eventSource:
          - s3.amazonaws.com
          eventName:
          - CopyObject
          - PutObject
          - CompleteMultipartUpload
          requestParameters:
            bucketName:
            - Ref: ArtifactsBucketName
            key:
            - Fn::Sub: ${Environment}/webapp/${CurrentTag}/webapp.zip
      Targets:
      - Arn:
          Fn::Sub: arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${FrontendPipeline}
        RoleArn:
          Fn::GetAtt:
          - AmazonCloudWatchEventRole
          - Arn
        Id: codepipeline-AppPipeline
